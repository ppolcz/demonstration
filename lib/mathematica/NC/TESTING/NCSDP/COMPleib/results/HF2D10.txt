Mathematica 8.0 for Mac OS X x86 (64-bit)
Copyright 1988-2011 Wolfram Research, Inc.

In[1]:= 
Out[1]= {stdout}

In[2]:= SetOptions[$Output,PageWidth->80];

In[3]:= 
In[3]:= (* ADJUST YOUR DIRECTORY SETTINGS HERE! *)

In[4]:= SetDirectory[$HomeDirectory <> "/work/projects/ipsolver"]

Out[4]= /Users/mauricio/work/projects/ipsolver

In[5]:= 
In[5]:= << SDP`

In[6]:= << SDPSylvester`

In[7]:= 
In[7]:=                         SolveProblem[fileName_, solution_, stream_, results_] := Module[
  {
    maxTimeSDP = 1800, (* Seconds allowed to finish SDP *)
    time1 = 0, time2 = 0, (* Used for timing *)
    out, (* output from SDPSolve calls *)
    Id, Ze
  },

  WriteString[stream, "Running... ", fileName, "\n"];
  
  (* Load problem file *)
  Get[fileName];

  WriteString[stream, \
              (nx*(nx+1))/2+(nz*(nz+1))/2+nx*nu, " variables. W is ", nz, \
              "x", nz, ", L is ", nu, "x", nx, ", X is ", nx, "x", nx, "\n"];

  (* Setup Leibfritz H_2 problem *)

  Id[n_] := IdentityMatrix[n] // N;
  Ze[m_, n_] := ConstantArray[0, {m, n}] // N;

  C1X = ArrayFlatten[{{C1}, {Ze[nx, nx]}}];
  IdX = ArrayFlatten[{{Ze[nz, nx]}, {Id[nx]}}];
  D12L = ArrayFlatten[{{D12}, {Ze[nx, nu]}}];
  IdW = ArrayFlatten[{{Id[nz]}, {Ze[nx, nz]}}];

  AA = {
     (* A X + B L + 0 W < -B1 B1^T *)
     {
       {2 A, Id[nx]}, 
       {2 B, Id[nx]}, 
       {Ze[nx, nz], Ze[nz, nx]}
     },
     (* -[W, C1 X + L D12; X C1^T + D12^T L^T X] < 0 *)
     {
       {ArrayFlatten[{{-IdX, -2 C1X}}],
        ArrayFlatten[{{Transpose[IdX], Transpose[IdX]}}]},
       {-2 D12L, Transpose[IdX]}, 
       {- IdW, Transpose[IdW]}
     }
   };
  CC = {-B1.Transpose[B1], Ze[nx + nz, nx + nz]};
  BB = {Ze[nx, nx], Ze[nu, nx], -Id[nz]};

  (* Run the algorithm *)

  WriteString[stream, "Starting SDP Solver...\n"];

  time1 = TimeUsed[];

  out = TimeConstrained[
          SDPSolve[{AA, BB, CC}, 
                   SymmetricVariables -> {1, 3}, 
                   DebugLevel -> 0],
          maxTimeSDP 
        ];

  time2 = TimeUsed[];

  WriteString[stream, "Done.\n"];

  If [ out === $Aborted, 

     Print["Can't optimize in ", maxTimeSDP, " seconds."];
     WriteString[stream, "Can't optimize in ", maxTimeSDP, \
                 " seconds.\n\n\n"];

     status = "TIMEOUT";

    ,

     status = "SUCCESS";

  ];

  (* Write results *)
  PutAppend[{fileName, DateString[], status, time2-time1,
             $MachineName, $MachineType, $ProcessorType}, results];

  (* Write solution *)
  Put[out, solution];

  Return[];

];

In[8]:= 
In[8]:= (* Extract problem to run from input line *)

In[9]:= 
In[9]:= problemCode = ToFileName["COMPleib", $CommandLine[[2]]];

In[10]:= solutionFileName = ToFileName["COMPleib", $CommandLine[[3]]];

In[11]:= outputFileName = ToFileName["COMPleib", $CommandLine[[4]]];

In[12]:= resultsFileName = ToFileName["COMPleib", $CommandLine[[5]]];

In[13]:= 
In[13]:= outputStream = If[ FileExistsQ[outputFileName], 
                   OpenAppend[outputFileName], 
                   OpenWrite[outputFileName] ];

In[14]:= SetOptions[outputStream, FormatType -> StandardForm];

In[15]:= 
In[15]:= SolveProblem[ problemCode <> ".m", solutionFileName, 
              outputStream, resultsFileName ];
 -------------------------------------------------------------------
 Problem data:
 * Dimensions (total):
   - Variables             = 84
   - Inequalities          = 2
 * Dimensions (detail):
   - Variables             = {{5, 5}, {2, 5}, {7, 7}}
   - Inequalities          = {5, 12}

 Method:
 * Method                  = PredictorCorrector
 * Search direction        = NT

 Precision:
 * Gap tolerance           = 1.e-9
 * Rationalize iterates    = False

 Other options:
 * Debug level             = 0

  K    <B, Y>           mu    theta/tau        alpha       |X S|2      |X S|oo 
 
>      |A X - B|   |A* X - C|
 -----------------------------------------------------
 
>   ------------------------------------------------------

LinearSolve::luc: 
   Result for LinearSolve of badly conditioned matrix {{-1., 1.}, {-1., 1.}}
     may contain significant numerical errors.
  1  1.1699 E -1  9.6031 E -1  1.0000 E  0  3.0463 E -4  1.0285 E  0 
 
>    9.9948 E -1  1.9648 E -8  1.3627 E -6          

LinearSolve::luc: 
   Result for LinearSolve of badly conditioned matrix {{-1., 1.}, {-1., 1.}}
     may contain significant numerical errors.
  2  1.1746 E -1  9.6034 E -1  1.0000 E  0  1.3080 E -4  1.0290 E  0 
 
>    10.0000 E -1  1.9644 E -8  2.3506 E -6          

LinearSolve::luc: 
   Result for LinearSolve of badly conditioned matrix {{-1., 1.}, {-1., 1.}}
     may contain significant numerical errors.

General::stop: Further output of LinearSolve::luc
     will be suppressed during this calculation.
  3  1.1746 E -1  9.6034 E -1  1.0000 E  0  4.0996 E-10  1.0290 E  0 
 
>    10.0000 E -1  1.9644 E -8  2.9126 E -6          
  4 -2.6742 E  0  8.3667 E -1  10.0000 E -1  1.0000 E  0  5.8666 E  0 
 
>    5.3992 E -1  3.3384 E -7  1.0977 E -6          

LinearSolve::sing1: 
   The matrix {{-1., 1.}, {-1., 1.}}
     is singular so a factorization will not be saved.

LinearSolve::nosol: Linear equation encountered that has no solution.

                                    1
Divide::infy: Infinite expression ------ encountered.
                                       1
                                  0. 10

Infinity::indet: 
                                 -1553
   Indeterminate expression 0. 10      ComplexInfinity encountered.
Can't optimize in 1800 seconds.

In[16]:= 
In[16]:= Close[outputStream];

In[17]:= 
In[17]:= $Echo = DeleteCases[$Echo, "stdout"];

In[18]:= 
