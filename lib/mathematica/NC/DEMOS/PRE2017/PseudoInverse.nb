(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    302349,       7845]
NotebookOptionsPosition[    295475,       7633]
NotebookOutlinePosition[    296363,       7662]
CellTagsIndexPosition[    296320,       7659]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pseudo Inverses", "Title",
 CellChangeTimes->{{3.454960447280991*^9, 3.454960453392949*^9}}],

Cell[CellGroupData[{

Cell["Load NCGB", "Subsection",
 CellChangeTimes->{{3.454944003666856*^9, 3.454944005441684*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "NC`"}], "\n", 
 RowBox[{"<<", " ", "NCGB`"}]}], "Input",
 CellChangeTimes->{{3.454960467996224*^9, 3.454960488489848*^9}, {
  3.516627776593523*^9, 3.516627777517935*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808228333*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", "\[InvisibleSpace]", "\<\"/Users/mauricio/NC\"\>", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["  ", "/Users/mauricio/NC", "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808232284*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808239313*^9}}],

Cell[BoxData["\<\"NCMultiplication.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808252721*^9}}],

Cell[BoxData["\<\"NC1SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808256886*^9}}],

Cell[BoxData["\<\"NCInverses.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808260912*^9}}],

Cell[BoxData["\<\"NCTransposes.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808264627*^9}}],

Cell[BoxData["\<\"NCAdjoints.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808374275*^9}}],

Cell[BoxData["\<\"NCCo.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.5166278083819017`*^9}}],

Cell[BoxData["\<\"NCRoots.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.5166278083888397`*^9}}],

Cell[BoxData["\<\"NC2SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808394*^9}}],

Cell[BoxData["\<\"NCCollect.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.5166278084011087`*^9}}],

Cell[BoxData["\<\"NCSubstitute.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.5166278084064302`*^9}}],

Cell[BoxData["\<\"NCMonomial.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808414357*^9}}],

Cell[BoxData["\<\"NCSolve.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808420949*^9}}],

Cell[BoxData["\<\"NCTools.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.5166278084271383`*^9}}],

Cell[BoxData["\<\"NC2SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.5166278084322357`*^9}}],

Cell[BoxData["\<\"NC1SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808477013*^9}}],

Cell[BoxData["\<\"NCSimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.5166278084888353`*^9}}],

Cell[BoxData["\<\"NCComplex.m loaded\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.5166278084956083`*^9}}],

Cell[BoxData["\<\"NCMatMult.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.51662780895016*^9}],

Cell[BoxData["\<\"NCDiff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627808960306*^9}],

Cell[BoxData["\<\"NCSchur.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809022608*^9}],

Cell[BoxData["\<\"NCAlias.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809041172*^9}],

Cell[BoxData["\<\"Grabs.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.5166278091023293`*^9}],

Cell[BoxData["\<\"NCTaylorCoeff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809108707*^9}],

Cell[BoxData["\<\"NCConvexity.m and NCGuts.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809174468*^9}],

Cell[BoxData["\<\"NCRealizationFunctions.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809237484*^9}],

Cell[BoxData["\<\"NCTeXForm.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809299696*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NCTeX::Using '\"\>", "\[InvisibleSpace]", "\<\"open\"\>", 
   "\[InvisibleSpace]", "\<\"' as PDFViewer.\"\>"}],
  SequenceForm["NCTeX::Using '", "open", "' as PDFViewer."],
  Editable->False]], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809424233*^9}],

Cell[BoxData["\<\"NCTeX.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.5166278094288883`*^9}],

Cell[BoxData["\<\"NCMaster.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809485834*^9}],

Cell[BoxData["\<\"NCOutput.m loaded\"\>"], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809491749*^9}],

Cell["\<\
------------------------------------------------------------
NCAlgebra - Version 4.0.2

Authors:
  J. William Helton*
  Mauricio de Oliveira* 
  Mark Stankus* 
  Robert L. Miller#

* Math Dept, UCSD                
# General Atomics Corp
  La  Jolla, CA 92093

Copyright: 
  Helton and Miller June 1991
  Helton 2002
  All rights reserved.

The program was written by the authors and by:
  David Hurst, Daniel Lamm, Orlando Merino, Robert Obar,
  Henry Pfister, Mike Walker, John Wavrik, Lois Yu,
  J. Camino, J. Griffin, J. Ovall, T. Shaheen, John Shopple. 
  The beginnings of the program come from eran@slac.
  Considerable recent help came from Igor Klep.


This program was written with support from 
  AFOSR, NSF, ONR, Lab for Math and Statistics at UCSD,
  UCSD Faculty Mentor Program,
  and US Department of Education.
  Primary support in 2010 is from the 
    NSF Division of Mathematical Sciences.

If you 
  (1) are a user, 
  (2) want to be a user, 
  (3) refer to NCAlgebra in a publication, or 
  (4) have had an interesting experience with NCAlgebra,
let us know by sending an e-mail message to  

  ncalg@math.ucsd.edu. 

We do not want to restrict access to NCAlgebra, but do 
  want to keep track of how it is being used.

For NCAlgebra updates see the web page:

  www.math.ucsd.edu/~ncalg 
------------------------------------------------------------\
\>", "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809503318*^9}],

Cell[BoxData[
 RowBox[{"LinkObject", "[", 
  RowBox[{"\<\"/Users/mauricio/NC/NCGB/Binary/p9c/MacOSX-x86-64/p9c\"\>", ",",
    "5", ",", "5"}], "]"}]], "Print",
 CellChangeTimes->{3.45496049706682*^9, 3.454960753938011*^9, 
  3.454961064600875*^9, 3.454961339224794*^9, 3.4549615780912523`*^9, 
  3.454961840425696*^9, 3.454961991360495*^9, 3.4549620215518723`*^9, 
  3.454962334212879*^9, 3.454962534790019*^9, 3.454962699217764*^9, 
  3.455303428349798*^9, 3.455306271856653*^9, 3.4553067158996058`*^9, 
  3.516627778743984*^9, 3.516627809900042*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetNonCommutative", "[", 
   RowBox[{"X", ",", "Y", ",", "W", ",", "Z"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4553050265525093`*^9, 3.4553050809999332`*^9}, {
  3.455305516291078*^9, 3.455305516810543*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"relations", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"X", "**", "Z", "**", "Y"}]}], ")"}], "**", "W"}], "-", 
      "1"}], ",", 
     RowBox[{
      RowBox[{"W", "**", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"X", "**", "Z", "**", "Y"}]}], ")"}]}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inv", "[", "Z", "]"}], "**", "Z"}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{"Z", "**", 
       RowBox[{"Inv", "[", "Z", "]"}]}], "-", "1"}]}], "}"}], "//", 
   "NCExpand"}]}]], "Input",
 CellChangeTimes->{{3.455305057936057*^9, 3.455305128556793*^9}, {
  3.455305304393443*^9, 3.455305306572563*^9}, {3.4553055357476673`*^9, 
  3.4553055761391363`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", "W", "-", 
    RowBox[{"X", "**", "Z", "**", "Y", "**", "W"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "W", "-", 
    RowBox[{"W", "**", "X", "**", "Z", "**", "Y"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"Inv", "[", "Z", "]"}], "**", "Z"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"Z", "**", 
     RowBox[{"Inv", "[", "Z", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4553051352077427`*^9, 3.455305307793816*^9, 3.455305437900566*^9, 
   3.455305491954423*^9, 3.455305547373098*^9, 3.455305577903783*^9, 
   3.455305610435766*^9, 3.4553056496679296`*^9, {3.5166277858271914`*^9, 
   3.516627810579536*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetMonomialOrder", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"X", ",", "Y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Z", ",", 
     RowBox[{"Inv", "[", "Z", "]"}]}], "}"}], ",", 
   RowBox[{"{", "W", "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.455305145766316*^9, {3.4553051976085978`*^9, 3.455305229080944*^9}, {
   3.4553054222894506`*^9, 3.455305423088925*^9}, {3.455305551755231*^9, 
   3.455305587402295*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvA\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.45530524727796*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvA.tex\>\"", ",", " ", "42"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvA.tex", 42], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvA.tex", 42], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.516627810834662*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvA.tex\>\"", ",", " ", "42"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvA.tex", 42], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvA.tex", 42], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.516627810839363*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvA.tex 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvA.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.5166278108448353`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"open  PinvA.pdf 1> \\\"/tmp/mNCRun.out\\\" 2> \\\
\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "open  PinvA.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.516627810944887*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/Users/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/Users/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.516627811022644*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "10"}], " ", "]"}], "//", 
  "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"1", "-", "W", "+", 
      RowBox[{"X", "**", "Z", "**", "Y", "**", "W"}]}]},
    {
     RowBox[{"1", "-", "W", "+", 
      RowBox[{"W", "**", "X", "**", "Z", "**", "Y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"Inv", "[", "Z", "]"}], "**", "Z"}]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Z", "**", 
       RowBox[{"Inv", "[", "Z", "]"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   1 - $CellContext`W + 
    NonCommutativeMultiply[$CellContext`X, $CellContext`Z, $CellContext`Y, \
$CellContext`W], 1 - $CellContext`W + 
    NonCommutativeMultiply[$CellContext`W, $CellContext`X, $CellContext`Z, \
$CellContext`Y], -1 + NonCommutativeMultiply[
      $CellContext`Inv[$CellContext`Z], $CellContext`Z], -1 + 
    NonCommutativeMultiply[$CellContext`Z, 
      $CellContext`Inv[$CellContext`Z]]}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.4553054124111757`*^9, 3.4553054467023153`*^9}, 
   3.4553054965534897`*^9, 3.455305555553524*^9, {3.455305591833941*^9, 
   3.455305614755*^9}, 3.455305654308776*^9, {3.516627793394071*^9, 
   3.5166278110999317`*^9}}],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{{3.455305412413142*^9, 3.455305446705652*^9}, 
   3.4553054965568542`*^9, 3.455305555556904*^9, {3.45530559186615*^9, 
   3.455305614791754*^9}, 3.455305654348754*^9, {3.516627793398419*^9, 
   3.516627811105629*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudoinverse of A", "Section",
 CellChangeTimes->{{3.455303439813245*^9, 3.455303449314818*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetNonCommutative", "[", 
   RowBox[{"A", ",", "B", ",", 
    RowBox[{"Pinv", "[", "A", "]"}], ",", 
    RowBox[{"Pinv", "[", "B", "]"}], ",", 
    RowBox[{"Pinv", "[", 
     RowBox[{"A", "+", "B"}], "]"}], ",", 
    RowBox[{"Pinv", "[", 
     RowBox[{"A", "**", "B"}], "]"}]}], " ", "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relations", " ", "=", " ", 
   RowBox[{
    RowBox[{"NCMakeRelations", "[", 
     RowBox[{"{", 
      RowBox[{"Pinv", ",", "A"}], "}"}], "]"}], " ", "//.", " ", 
    RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", 
   RowBox[{"{", 
    RowBox[{"A", ",", 
     RowBox[{"tp", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}]}], " ", "}"}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.455303435825029*^9, {3.455304149818997*^9, 3.455304173429998*^9}, 
   3.455304405394816*^9, {3.455304442769433*^9, 3.455304462704898*^9}, {
   3.455304563032814*^9, 3.455304582659992*^9}, {3.455304740502245*^9, 
   3.455304740734542*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "\[Equal]", "A"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", "A", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"tp", "[", "A", "]"}], "**", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
     RowBox[{"tp", "[", "A", "]"}]}], "\[Equal]", 
    RowBox[{"A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"tp", "[", 
     RowBox[{"Pinv", "[", "A", "]"}], "]"}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{"tp", "[", "A", "]"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.455304409290432*^9, {3.4553044636602697`*^9, 3.4553044757637777`*^9}, {
   3.455304565558694*^9, 3.455304586940074*^9}, 3.4553047427423573`*^9, 
   3.455305659474019*^9, {3.516627796323547*^9, 3.5166278111961927`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvA\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.455304170940394*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvA.tex\>\"", ",", " ", "43"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvA.tex", 43], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvA.tex", 43], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.516627811318501*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvA.tex\>\"", ",", " ", "43"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvA.tex", 43], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvA.tex", 43], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.516627811376678*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvA.tex 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvA.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.516627811382985*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"open  PinvA.pdf 1> \\\"/tmp/mNCRun.out\\\" 2> \\\
\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "open  PinvA.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.51662781152147*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/Users/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/Users/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.5166278116029663`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "10"}], " ", "]"}], "//", 
  "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.455304159877202*^9, 3.455304190216152*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}], "+", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{"-", "A"}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "A", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"tp", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`A]], -$CellContext`A + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]] - $CellContext`Pinv[$CellContext`A], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], $CellContext`A] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      NonCommutativeMultiply`tp[$CellContext`A]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -
     NonCommutativeMultiply[$CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A]]}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.45530418453717*^9, 3.4553041909281397`*^9}, {
   3.455304469081811*^9, 3.4553044776465607`*^9}, {3.455304569314247*^9, 
   3.4553045893615923`*^9}, 3.455304746335107*^9, 3.455305663070256*^9, 
   3.516627811970951*^9}],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{{3.455304180588873*^9, 3.4553041909573383`*^9}, {
   3.455304469108603*^9, 3.455304477649626*^9}, {3.455304569338192*^9, 
   3.455304589392166*^9}, 3.455304746360916*^9, 3.4553056631022987`*^9, 
   3.5166278119760513`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudoinverse of A + B", "Section",
 CellChangeTimes->{{3.455303762339542*^9, 3.455303762659378*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"relations", " ", "=", " ", 
    RowBox[{
     RowBox[{"NCMakeRelations", "[", 
      RowBox[{"{", 
       RowBox[{"Pinv", ",", "A", ",", "B", ",", 
        RowBox[{"A", "+", "B"}]}], "}"}], "]"}], " ", "//.", " ", 
     RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", 
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", 
     RowBox[{"tp", "[", "A", "]"}], ",", 
     RowBox[{"tp", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"A", "+", "B"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", 
       RowBox[{"A", "+", "B"}], "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{"A", "+", "B"}], "]"}], "]"}]}], " ", "}"}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.455303775434408*^9, 3.455304205376693*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvAPlusB\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4553042099407473`*^9, 3.455304210644578*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAPlusB.tex\>\"", ",", " ", "45"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAPlusB.tex", 45], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvAPlusB.tex", 45], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.516627813961876*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAPlusB.tex\>\"", ",", " ", "45"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAPlusB.tex", 45], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvAPlusB.tex", 45], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.516627814522935*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvAPlusB.tex 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvAPlusB.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.516627814528064*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"open  PinvAPlusB.pdf 1> \\\"/tmp/mNCRun.out\\\" \
2> \\\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "open  PinvAPlusB.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", 
   "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.5166278146648808`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/Users/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/Users/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.516627814737953*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "10"}], " ", "]"}], "//", 
  "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}], "+", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{"-", "A"}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "A", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "B"}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "B", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "A"}], "-", "B", "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{"Pinv", "[", 
       RowBox[{"A", "+", "B"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A"}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "B"}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}]}]}], "-", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"tp", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}], "**", "A"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        RowBox[{"tp", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "A"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "A", "]"}], "+", 
          RowBox[{"tp", "[", "B", "]"}]}], "]"}]}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "A", "]"}], "+", 
          RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"tp", "[", "A", "]"}]}]}], "-", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "B", "]"}]}], "-", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "A", "]"}]}], "-", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "B", "]"}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "-", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"tp", "[", "B", "]"}]}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "A", "]"}], "+", 
          RowBox[{"tp", "[", "B", "]"}]}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
        RowBox[{"tp", "[", "A", "]"}]}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"tp", "[", "B", "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "A", "]"}], "+", 
          RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "A", "]"}], "+", 
         RowBox[{"tp", "[", "B", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`A]], -$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`B]], -$CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], -$CellContext`A + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]] - $CellContext`Pinv[$CellContext`A], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], $CellContext`A] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      NonCommutativeMultiply`tp[$CellContext`A]], -$CellContext`B + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - $CellContext`Pinv[$CellContext`B], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`B] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`B, 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`B]], -$CellContext`A - \
$CellContext`B + NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - \
$CellContext`Pinv[$CellContext`A + $CellContext`B], NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`B] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[$CellContext`B, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`B]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -
     NonCommutativeMultiply[$CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - 
    NonCommutativeMultiply[$CellContext`A, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]] - 
    NonCommutativeMultiply[$CellContext`B, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], $CellContext`A] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A] + 
        NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A] + 
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], -
     NonCommutativeMultiply[$CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] - 
    NonCommutativeMultiply[$CellContext`A, 
     NonCommutativeMultiply`tp[$CellContext`B]] - 
    NonCommutativeMultiply[$CellContext`B, 
     NonCommutativeMultiply`tp[$CellContext`A]] - 
    NonCommutativeMultiply[$CellContext`B, 
     NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] - 
    NonCommutativeMultiply[$CellContext`B, 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`B]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`B, 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A] + 
        NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], $CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] - NonCommutativeMultiply[
     $CellContext`Pinv[$CellContext`B], $CellContext`A, 
     NonCommutativeMultiply`tp[$CellContext`B]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A] + 
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]]}],
  Editable->False]], "Output",
 CellChangeTimes->{3.455304227666498*^9, 3.455305672072103*^9, 
  3.5166278159569063`*^9}],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{3.455304227694191*^9, 3.455305672110758*^9, 
  3.516627815969965*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudoinverse A ** B", "Section",
 CellChangeTimes->{{3.455305699595438*^9, 3.4553057117748117`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"relations", " ", "=", " ", 
    RowBox[{
     RowBox[{"NCMakeRelations", "[", 
      RowBox[{"{", 
       RowBox[{"Pinv", ",", "A", ",", "B", ",", 
        RowBox[{"A", "**", "B"}]}], "}"}], "]"}], " ", "//.", " ", 
     RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", 
      RowBox[{"tp", "[", "A", "]"}], ",", 
      RowBox[{"tp", "[", "B", "]"}], ",", 
      RowBox[{"Pinv", "[", "A", "]"}], ",", 
      RowBox[{"Pinv", "[", "B", "]"}], ",", 
      RowBox[{"Pinv", "[", 
       RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
      RowBox[{"Pinv", "[", 
       RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], " ", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Pinv", "[", 
       RowBox[{"A", "**", "B"}], "]"}], ",", 
      RowBox[{"Pinv", "[", 
       RowBox[{"tp", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "]"}], ",", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "]"}]}], " ", "}"}]}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4553056764775352`*^9, 3.455305683260866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "3", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvAB-3iters\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "4", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvAB-4iters\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "5", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvAB-5iters\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.455305723106394*^9, 3.455305725579735*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-3iters.tex\>\"", ",", " ", "46"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-3iters.tex", 46], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-3iters.tex", 46], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-3iters.tex\>\"", ",", " ", "46"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-3iters.tex", 46], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-3iters.tex", 46], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627818319069*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvAB-3iters.tex \
1> \\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvAB-3iters.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.5166278183236732`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"open  PinvAB-3iters.pdf 1> \\\"/tmp/mNCRun.out\\\
\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "open  PinvAB-3iters.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", 
   "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.5166278184741917`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/Users/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/Users/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627818557173*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-4iters.tex\>\"", ",", " ", "47"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-4iters.tex", 47], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-4iters.tex", 47], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627821827743*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-4iters.tex\>\"", ",", " ", "47"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-4iters.tex", 47], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-4iters.tex", 47], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.5166278226591997`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvAB-4iters.tex \
1> \\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvAB-4iters.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627822663732*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"open  PinvAB-4iters.pdf 1> \\\"/tmp/mNCRun.out\\\
\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "open  PinvAB-4iters.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", 
   "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627822811817*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/Users/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/Users/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627822905951*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-5iters.tex\>\"", ",", " ", "48"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-5iters.tex", 48], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-5iters.tex", 48], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.5166278288963423`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-5iters.tex\>\"", ",", " ", "48"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-5iters.tex", 48], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-5iters.tex", 48], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627830107411*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvAB-5iters.tex \
1> \\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvAB-5iters.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627830112471*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"open  PinvAB-5iters.pdf 1> \\\"/tmp/mNCRun.out\\\
\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "open  PinvAB-5iters.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", 
   "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627830272118*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/Users/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/Users/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.5166278303402233`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "5"}], " ", "]"}], "//", 
  "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.455305863043779*^9}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}], "+", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}]}], "+", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{"-", "A"}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "A", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "B"}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "B", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", "B"}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}], "-", 
      RowBox[{"Pinv", "[", 
       RowBox[{"A", "**", "B"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", "B"}], "-", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"tp", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        RowBox[{"tp", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B"}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", "B", "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"tp", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"tp", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"tp", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "A", "]"}], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"tp", "[", "B", "]"}], "**", 
          RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"tp", "[", "B", "]"}], "**", 
         RowBox[{"tp", "[", "A", "]"}]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`A]], -$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`B]], -$CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], \
-$CellContext`A + NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]] - $CellContext`Pinv[$CellContext`A], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], $CellContext`A] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      NonCommutativeMultiply`tp[$CellContext`A]], -$CellContext`B + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - $CellContext`Pinv[$CellContext`B], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`B] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`B, 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`A, $CellContext`B] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] - \
$CellContext`Pinv[
     NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, $CellContext`B] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -
     NonCommutativeMultiply[$CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - NonCommutativeMultiply[
     $CellContext`Pinv[$CellContext`B], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]]], 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] - 
    NonCommutativeMultiply[
     $CellContext`Pinv[$CellContext`B], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]]], 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[
      NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]]}],
  Editable->False]], "Output",
 CellChangeTimes->{3.455305764519458*^9, 3.51662783316501*^9}],

Cell[BoxData["\<\"NOT Finite Basis.\"\>"], "Print",
 CellChangeTimes->{3.455305764546969*^9, 3.5166278331889277`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudoinverse A ** Pinv[A] + B ** Pinv[B]", "Section",
 CellChangeTimes->{{3.4553058315357857`*^9, 3.455305849682085*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"relations", " ", "=", " ", 
    RowBox[{
     RowBox[{"NCMakeRelations", "[", 
      RowBox[{"{", 
       RowBox[{"Pinv", ",", "A", ",", "B", ",", 
        RowBox[{
         RowBox[{"A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
         RowBox[{"B", "**", 
          RowBox[{"Pinv", "[", "B", "]"}]}]}]}], "}"}], "]"}], " ", "//.", 
     " ", 
     RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", 
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", 
     RowBox[{"tp", "[", "A", "]"}], ",", 
     RowBox[{"tp", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{"B", "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{"B", "**", 
         RowBox[{"Pinv", "[", "B", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{"B", "**", 
         RowBox[{"Pinv", "[", "B", "]"}]}]}], "]"}], "]"}]}], " ", "}"}], " ",
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.4553058826005287`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<APinvAPlusBPinvB\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.455305903267181*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<APinvAPlusBPinvB.tex\>\"", ",", " ", "49"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["APinvAPlusBPinvB.tex", 49], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["APinvAPlusBPinvB.tex", 49], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627843143662*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<APinvAPlusBPinvB.tex\>\"", ",", " ", "49"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["APinvAPlusBPinvB.tex", 49], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["APinvAPlusBPinvB.tex", 49], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627844695393*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  \
APinvAPlusBPinvB.tex 1> \\\"/tmp/mNCRun.out\\\" 2> \
\\\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  APinvAPlusBPinvB.tex 1> \"/tmp/mNCRun.out\" \
2> \"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627844700345*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"open  APinvAPlusBPinvB.pdf 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "open  APinvAPlusBPinvB.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"",
    "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627844854052*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/Users/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/Users/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627845020103*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "10"}], " ", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.455305874828807*^9, 3.455305904731866*^9}}],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{3.516627850804455*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "for", " ", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", "A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"relations", " ", "=", " ", 
     RowBox[{
      RowBox[{"NCMakeRelations", "[", 
       RowBox[{"{", 
        RowBox[{"Pinv", ",", "A", ",", "B", ",", 
         RowBox[{
          RowBox[{"A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}]}]}], "}"}], "]"}], " ", "//.", 
      " ", 
      RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetMonomialOrder", "[", " ", 
     RowBox[{"{", 
      RowBox[{"A", ",", "B", ",", 
       RowBox[{"tp", "[", "A", "]"}], ",", 
       RowBox[{"tp", "[", "B", "]"}], ",", 
       RowBox[{"Pinv", "[", "A", "]"}], ",", 
       RowBox[{"Pinv", "[", "B", "]"}], ",", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
       RowBox[{"tp", "[", 
        RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
       RowBox[{"tp", "[", 
        RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], ",", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", 
         RowBox[{
          RowBox[{"A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}], ",", 
       RowBox[{"tp", "[", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}]}], " ", "}"}], 
     " ", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NCProcess", "[", " ", 
     RowBox[{
     "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
      ",", " ", "\"\<APinvAMinusPinvBBAPinvA\>\"", ",", " ", 
      RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
      RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
      RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NCMakeGB", "[", " ", 
     RowBox[{"relations", ",", "10"}], " ", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
       "1"}], ",", " ", 
      RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", 
      " ", 
      RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], 
     " ", "]"}], ";"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<APinvAMinusPinvBBAPinvA.tex\>\"", ",", " ", "50"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["APinvAMinusPinvBBAPinvA.tex", 50], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["APinvAMinusPinvBBAPinvA.tex", 50], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627861548175*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<APinvAMinusPinvBBAPinvA.tex\>\"", ",", " ", "50"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["APinvAMinusPinvBBAPinvA.tex", 50], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["APinvAMinusPinvBBAPinvA.tex", 50], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.5166278631242657`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  \
APinvAMinusPinvBBAPinvA.tex 1> \\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\
\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  APinvAMinusPinvBBAPinvA.tex 1> \
\"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.5166278631296167`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"open  APinvAMinusPinvBBAPinvA.pdf 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "open  APinvAMinusPinvBBAPinvA.pdf 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627863344637*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/Users/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/Users/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627863451089*^9}],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627868445881*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Run", " ", "for", " ", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], " ", "AND", " ", 
   
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", "A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.45530606344495*^9, 3.4553060642204*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetNonCommutative", "[", 
   RowBox[{"A", ",", "B", ",", 
    RowBox[{"Pinv", "[", "A", "]"}], ",", 
    RowBox[{"Pinv", "[", "B", "]"}], ",", 
    RowBox[{"Pinv", "[", 
     RowBox[{"A", "+", "B"}], "]"}], ",", 
    RowBox[{"Pinv", "[", 
     RowBox[{"A", "**", "B"}], "]"}]}], " ", "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relations", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"NCMakeRelations", "[", 
      RowBox[{"{", 
       RowBox[{"Pinv", ",", "A", ",", "B", ",", 
        RowBox[{
         RowBox[{"A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ",", 
        RowBox[{
         RowBox[{"A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}]}]}], "}"}], "]"}], "//.", 
     RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}], "//.", 
    RowBox[{"tp", "\[Rule]", "Tp"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"order", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", 
     RowBox[{"tp", "[", "A", "]"}], ",", 
     RowBox[{"tp", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}]}], " ", "}"}], " ",
    "//.", 
   RowBox[{"tp", "\[Rule]", "Tp"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", "order", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.455306048980592*^9, 3.455306162533353*^9, {3.455306241883621*^9, 
   3.455306245453993*^9}, {3.4553063043927526`*^9, 3.455306311706965*^9}, {
   3.455306408999866*^9, 3.455306455204768*^9}, {3.4553065527259703`*^9, 
   3.455306567556807*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "\[Equal]", "A"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", "A", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", "A", "]"}], "**", 
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
     RowBox[{"Tp", "[", "A", "]"}]}], "\[Equal]", 
    RowBox[{"A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Tp", "[", 
     RowBox[{"Pinv", "[", "A", "]"}], "]"}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{"Tp", "[", "A", "]"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"B", "**", 
     RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}], "\[Equal]", "B"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", 
     RowBox[{"Pinv", "[", "B", "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", "B", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", "B", "]"}], "**", 
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}], "**", 
     RowBox[{"Tp", "[", "B", "]"}]}], "\[Equal]", 
    RowBox[{"B", "**", 
     RowBox[{"Pinv", "[", "B", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Tp", "[", 
     RowBox[{"Pinv", "[", "B", "]"}], "]"}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{"Tp", "[", "B", "]"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Tp", "[", "B", "]"}], "**", 
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}]}]}], ")"}], "**", 
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}]}], 
    "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Tp", "[", "B", "]"}], "**", 
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}]}]}], ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Tp", "[", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Tp", "[", "B", "]"}], "**", 
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Tp", "[", "A", "]"}]}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}], "**", 
        RowBox[{"Tp", "[", "B", "]"}], "**", 
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]}], ")"}], "**", 
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}], "**", 
        RowBox[{"Tp", "[", "B", "]"}], "**", 
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]}], ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Tp", "[", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Tp", "[", "A", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Tp", "[", "A", "]"}], "**", 
       RowBox[{"Tp", "[", "B", "]"}], "**", 
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]}], "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.455306164446568*^9, 3.455306247756299*^9, {3.455306284808585*^9, 
   3.455306322511756*^9}, 3.455306357202368*^9, {3.455306409968349*^9, 
   3.45530642601665*^9}, {3.455306456600539*^9, 3.4553064612251377`*^9}, 
   3.455306573396771*^9, 3.4553067261052303`*^9, 3.516627868548073*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"A", ",", "B", ",", 
   RowBox[{"Tp", "[", "A", "]"}], ",", 
   RowBox[{"Tp", "[", "B", "]"}], ",", 
   RowBox[{"Pinv", "[", "A", "]"}], ",", 
   RowBox[{"Pinv", "[", "B", "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{"Tp", "[", "A", "]"}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{"Tp", "[", "B", "]"}], "]"}], ",", 
   RowBox[{"Tp", "[", 
    RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
   RowBox[{"Tp", "[", 
    RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Tp", "[", "B", "]"}], "**", 
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
      RowBox[{"Tp", "[", "A", "]"}]}]}], "]"}], ",", 
   RowBox[{"Tp", "[", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
      RowBox[{"Tp", "[", "A", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
      RowBox[{"Tp", "[", "A", "]"}], "**", 
      RowBox[{"Tp", "[", "B", "]"}], "**", 
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Tp", "[", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.455306164446568*^9, 3.455306247756299*^9, {3.455306284808585*^9, 
   3.455306322511756*^9}, 3.455306357202368*^9, {3.455306409968349*^9, 
   3.45530642601665*^9}, {3.455306456600539*^9, 3.4553064612251377`*^9}, 
   3.455306573396771*^9, 3.4553067261052303`*^9, 3.516627868555423*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PrintMonomialOrder", "[", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", "5", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
    " ", "\"\<BothTogether\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"PrintScreenOutput", "\[Rule]", "True"}]}], " ", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.4553060556059237`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinkObject", "::", "linkd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Unable to communicate with closed link \
\[NoBreak]\\!\\(LinkObject[\\(\\(\\\"/Users/mauricio/NC/NCGB/Binary/p9c/\
MacOSX-x86-64/p9c\\\", 5, 5\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/LinkObject/linkd\\\", ButtonNote -> \
\\\"LinkObject::linkd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5166278689898653`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NCMakeGB", "[", " ", 
  RowBox[{"relations", ",", "3"}], " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.454960708972801*^9, 3.454960729734789*^9}, {
  3.455306045850088*^9, 3.455306059710319*^9}, {3.4553066993260612`*^9, 
  3.455306700019136*^9}, {3.455306745131281*^9, 3.455306768163196*^9}, {
  3.455306841260737*^9, 3.455306841761969*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinkObject", "::", "\<\"linkd\"\>"}], ":", 
  " ", "\<\"Unable to communicate with closed link \
\\!\\(LinkObject[\\(\\(\\\"/Users/mauricio/work/projects/NC2009/NC2009/NCGB/\
Binary/p9c/MacOSX-x86/p9c\\\", 5, 5\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/LinkObject/linkd\\\", ButtonNote -> \
\\\"LinkObject::linkd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.455306906485244*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NCMakeGB", "::", "\<\"failedCall\"\>"}], ":", 
  " ", "\<\"Call to '\\!\\(MoraRun\\)' failed.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.455306906768525*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.455306746234415*^9, 3.455306776939686*^9, 
  3.455306906770143*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinkObject", "::", "\<\"linkn\"\>"}], ":", 
  " ", "\<\"Argument \
\\!\\(LinkObject[\\(\\(\\\"/Users/mauricio/work/projects/NC2009/NC2009/NCGB/\
Binary/p9c/MacOSX-x86/p9c\\\", 5, 5\\)\\)]\\) in \
\\!\\(LinkWrite[\\(\\(\\(\\(LinkObject[\\(\\(\\\"/Users/mauricio/work/\
projects/NC2009/NC2009/NCGB/Binary/p9c/MacOSX-x86/p9c\\\", 5, 5\\)\\)]\\)\\), \
\\(\\(\\(\\(\[LeftSkeleton] 10 \[RightSkeleton]\\)\\)[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\) has an invalid LinkObject number; the \
link may be closed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/LinkObject/linkn\\\", ButtonNote -> \
\\\"LinkObject::linkn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.45530690682528*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1024, 746},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
DockedCells->(FrontEndExecute[{
   FrontEnd`NotebookApply[
    FrontEnd`InputNotebook[], #, Placeholder]}]& ),
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile":>FrontEnd`FileName[{$RootDirectory, "home", "ashaheen",
    "PinvAB", "RunsForPaper"}, "RunsForPaper.nb.ps", CharacterEncoding -> 
  "ISO8859-1"]},
ShowSelection->True,
Magnification->1.25,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 98, 1, 74, "Title"],
Cell[CellGroupData[{
Cell[690, 27, 97, 1, 42, "Subsection"],
Cell[CellGroupData[{
Cell[812, 32, 202, 4, 66, "Input"],
Cell[CellGroupData[{
Cell[1039, 40, 495, 8, 25, "Print"],
Cell[1537, 50, 629, 12, 25, "Print"],
Cell[2169, 64, 725, 14, 25, "Print"],
Cell[2897, 80, 461, 7, 25, "Print"],
Cell[3361, 89, 459, 7, 25, "Print"],
Cell[3823, 98, 455, 7, 25, "Print"],
Cell[4281, 107, 457, 7, 25, "Print"],
Cell[4741, 116, 455, 7, 25, "Print"],
Cell[5199, 125, 451, 7, 25, "Print"],
Cell[5653, 134, 454, 7, 25, "Print"],
Cell[6110, 143, 456, 7, 25, "Print"],
Cell[6569, 152, 456, 7, 25, "Print"],
Cell[7028, 161, 459, 7, 25, "Print"],
Cell[7490, 170, 455, 7, 25, "Print"],
Cell[7948, 179, 452, 7, 25, "Print"],
Cell[8403, 188, 454, 7, 25, "Print"],
Cell[8860, 197, 466, 7, 25, "Print"],
Cell[9329, 206, 464, 7, 25, "Print"],
Cell[9796, 215, 465, 7, 25, "Print"],
Cell[10264, 224, 456, 7, 25, "Print"],
Cell[10723, 233, 443, 6, 25, "Print"],
Cell[11169, 241, 441, 6, 25, "Print"],
Cell[11613, 249, 442, 6, 25, "Print"],
Cell[12058, 257, 442, 6, 25, "Print"],
Cell[12503, 265, 442, 6, 25, "Print"],
Cell[12948, 273, 448, 6, 25, "Print"],
Cell[13399, 281, 459, 6, 25, "Print"],
Cell[13861, 289, 457, 6, 25, "Print"],
Cell[14321, 297, 444, 6, 25, "Print"],
Cell[14768, 305, 643, 11, 25, "Print"],
Cell[15414, 318, 442, 6, 25, "Print"],
Cell[15859, 326, 443, 6, 25, "Print"],
Cell[16305, 334, 443, 6, 25, "Print"],
Cell[16751, 342, 1788, 56, 805, "Print"],
Cell[18542, 400, 551, 9, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[19120, 413, 251, 5, 46, "Input"],
Cell[CellGroupData[{
Cell[19396, 422, 820, 25, 66, "Input"],
Cell[20219, 449, 766, 21, 46, "Output"]
}, Open  ]],
Cell[21000, 473, 547, 14, 66, "Input"],
Cell[CellGroupData[{
Cell[21572, 491, 244, 6, 46, "Input"],
Cell[CellGroupData[{
Cell[21841, 501, 687, 19, 25, "Print"],
Cell[22531, 522, 701, 20, 25, "Print"],
Cell[23235, 544, 551, 13, 25, "Print"],
Cell[23789, 559, 495, 11, 25, "Print"],
Cell[24287, 572, 440, 10, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24776, 588, 507, 14, 66, "Input"],
Cell[25286, 604, 1354, 36, 103, "Output"],
Cell[26643, 642, 284, 4, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26976, 652, 103, 1, 89, "Section"],
Cell[27082, 655, 342, 9, 46, "Input"],
Cell[CellGroupData[{
Cell[27449, 668, 1108, 28, 123, "Input"],
Cell[28560, 698, 1210, 33, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29807, 736, 433, 10, 46, "Input"],
Cell[CellGroupData[{
Cell[30265, 750, 610, 17, 25, "Print"],
Cell[30878, 769, 624, 18, 25, "Print"],
Cell[31505, 789, 472, 11, 25, "Print"],
Cell[31980, 802, 417, 9, 25, "Print"],
Cell[32400, 813, 365, 8, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32814, 827, 573, 15, 66, "Input"],
Cell[33390, 844, 4689, 125, 179, "Output"],
Cell[38082, 971, 289, 4, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38420, 981, 107, 1, 89, "Section"],
Cell[38530, 984, 1513, 40, 142, "Input"],
Cell[CellGroupData[{
Cell[40068, 1028, 464, 10, 46, "Input"],
Cell[CellGroupData[{
Cell[40557, 1042, 625, 17, 25, "Print"],
Cell[41185, 1061, 639, 18, 25, "Print"],
Cell[41827, 1081, 482, 11, 45, "Print"],
Cell[42312, 1094, 434, 10, 25, "Print"],
Cell[42749, 1106, 363, 8, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43161, 1120, 507, 14, 66, "Input"],
Cell[43671, 1136, 57634, 1404, 673, "Output"],
Cell[101308, 2542, 136, 2, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101493, 2550, 107, 1, 89, "Section"],
Cell[101603, 2553, 1603, 43, 142, "Input"],
Cell[CellGroupData[{
Cell[103231, 2600, 1267, 28, 85, "Input"],
Cell[CellGroupData[{
Cell[104523, 2632, 634, 17, 25, "Print"],
Cell[105160, 2651, 648, 18, 25, "Print"],
Cell[105811, 2671, 490, 11, 45, "Print"],
Cell[106304, 2684, 440, 10, 25, "Print"],
Cell[106747, 2696, 363, 8, 25, "Print"],
Cell[107113, 2706, 634, 17, 25, "Print"],
Cell[107750, 2725, 650, 18, 25, "Print"],
Cell[108403, 2745, 488, 11, 45, "Print"],
Cell[108894, 2758, 438, 10, 25, "Print"],
Cell[109335, 2770, 363, 8, 25, "Print"],
Cell[109701, 2780, 636, 17, 25, "Print"],
Cell[110340, 2799, 648, 18, 25, "Print"],
Cell[110991, 2819, 488, 11, 45, "Print"],
Cell[111482, 2832, 438, 10, 25, "Print"],
Cell[111923, 2844, 365, 8, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[112337, 2858, 548, 15, 66, "Input"],
Cell[112888, 2875, 146603, 3732, 1813, "Output"],
Cell[259494, 6609, 117, 1, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259660, 6616, 128, 1, 89, "Section"],
Cell[259791, 6619, 2044, 57, 161, "Input"],
Cell[CellGroupData[{
Cell[261860, 6680, 444, 10, 66, "Input"],
Cell[CellGroupData[{
Cell[262329, 6694, 643, 17, 25, "Print"],
Cell[262975, 6713, 657, 18, 25, "Print"],
Cell[263635, 6733, 492, 11, 45, "Print"],
Cell[264130, 6746, 448, 11, 25, "Print"],
Cell[264581, 6759, 363, 8, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[264993, 6773, 555, 14, 66, "Input"],
Cell[265551, 6789, 89, 1, 25, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265677, 6795, 3705, 95, 332, "Input"],
Cell[CellGroupData[{
Cell[269407, 6894, 762, 19, 25, "Print"],
Cell[270172, 6915, 778, 20, 25, "Print"],
Cell[270953, 6937, 606, 13, 45, "Print"],
Cell[271562, 6952, 558, 13, 25, "Print"],
Cell[272123, 6967, 461, 10, 25, "Print"],
Cell[272587, 6979, 209, 3, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[272823, 6986, 585, 17, 46, "Input"],
Cell[273411, 7005, 342, 9, 46, "Input"],
Cell[CellGroupData[{
Cell[273778, 7018, 3454, 92, 256, "Input"],
Cell[277235, 7112, 12021, 354, 484, "Output"],
Cell[289259, 7468, 2562, 70, 123, "Output"]
}, Open  ]],
Cell[291836, 7541, 66, 1, 46, "Input"],
Cell[CellGroupData[{
Cell[291927, 7546, 497, 11, 66, "Input"],
Cell[292427, 7559, 557, 11, 47, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293021, 7575, 730, 16, 66, "Input"],
Cell[293754, 7593, 523, 9, 47, "Message"],
Cell[294280, 7604, 197, 4, 26, "Message"],
Cell[294480, 7610, 124, 2, 46, "Output"],
Cell[294607, 7614, 828, 14, 87, "Message"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
