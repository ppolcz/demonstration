(*************************************************************************
 *         This file was automatically generated by md2usage.py          *
 *                   on 2017-04-27 17:33:56.219803                       *
 *************************************************************************)


(* NCRL *)
NCRL::usage = "\
NCRL is an alias for NCReplaceList.

See also: NCReplaceList.";

(* NCReplace *)
NCReplace::usage = "\
NCReplace[expr,rules] applies a rule or list of rules rules in an attempt to transform the entire nc expression expr.

NCReplace[expr,rules,levelspec] applies rules to parts of expr specified by levelspec.

See also: NCReplaceAll, NCReplaceList, NCReplaceRepeated.";

(* NCRRSym *)
NCRRSym::usage = "\
NCRRSym is an alias for NCReplaceRepeatedSymmetric.

See also: NCReplaceRepeatedSymmetric.";

(* NCRLSA *)
NCRLSA::usage = "\
NCRLSA is an alias for NCReplaceListSymmetric.

See also: NCReplaceListSymmetric.";

(* NCReplaceRepeatedSymmetric *)
NCReplaceRepeatedSymmetric::usage = "\
NCReplaceRepeatedSymmetric[expr, rules] applies NCMakeRuleSymmetric to rules before calling NCReplaceRepeated.

See also: NCReplaceRepeated, NCMakeRuleSymmetric.";

(* NCRSym *)
NCRSym::usage = "\
NCRSym is an alias for NCReplaceSymmetric.

See also: NCReplaceSymmetric.";

(* NCMatrixReplaceRepeated *)
NCMatrixReplaceRepeated::usage = "\
NCMatrixReplaceRepeated[expr,rules] repeatedly performs replacements using rule or list of rules rules until expr no longer changes.

NCMatrixReplaceRepeated works as NCReplaceRepeated but takes extra steps to make sure substitutions work with matrices.

See also: NCReplaceRepeated, NCMatrixReplaceAll.";

(* NCReplaceAll *)
NCReplaceAll::usage = "\
NCReplaceAll[expr,rules] applies a rule or list of rules rules in an attempt to transform each part of the nc expression expr.

See also: NCReplace, NCReplaceList, NCReplaceRepeated.";

(* NCReplaceListSymmetric *)
NCReplaceListSymmetric::usage = "\
NCReplaceListSymmetric[expr, rules] applies NCMakeRuleSymmetric to rules before calling NCReplaceList.

See also: NCReplaceList, NCMakeRuleSymmetric.";

(* NCRRSA *)
NCRRSA::usage = "\
NCRRSA is an alias for NCReplaceRepeatedSymmetric.

See also: NCReplaceRepeatedSymmetric.";

(* NCRASA *)
NCRASA::usage = "\
NCRASA is an alias for NCReplaceAllSymmetric.

See also: NCReplaceAllSymmetric.";

(* NCReplaceList *)
NCReplaceList::usage = "\
NCReplace[expr,rules] attempts to transform the entire nc expression expr by applying a rule or list of rules rules in all possible ways, and returns a list of the results obtained.

ReplaceList[expr,rules,n] gives a list of at most n results.

See also: NCReplace, NCReplaceAll, NCReplaceRepeated.";

(* NCRA *)
NCRA::usage = "\
NCRA is an alias for NCReplaceAll.

See also: NCReplaceAll.";

(* NCReplaceAllSymmetric *)
NCReplaceAllSymmetric::usage = "\
NCReplaceAllSymmetric[expr, rules] applies NCMakeRuleSymmetric to rules before calling NCReplaceAll.

See also: NCReplaceAll, NCMakeRuleSymmetric.";

(* NCR *)
NCR::usage = "\
NCR is an alias for NCReplace.

See also: NCReplace.";

(* NCRSA *)
NCRSA::usage = "\
NCRSA is an alias for NCReplaceSymmetric.

See also: NCReplaceSymmetric.";

(* NCMakeRuleSymmetric *)
NCMakeRuleSymmetric::usage = "\
NCMakeRuleSymmetric[rules] add rules to transform the transpose of the left-hand side of rules into the transpose of the right-hand side of rules.

See also: NCMakeRuleSelfAdjoint, NCReplace, NCReplaceAll, NCReplaceList, NCReplaceRepeated.";

(* NCRR *)
NCRR::usage = "\
NCRR is an alias for NCReplaceRepeated.

See also: NCReplaceRepeated.";

(* NCMakeRuleSelfAdjoint *)
NCMakeRuleSelfAdjoint::usage = "\
NCMakeRuleSelfAdjoint[rules] add rules to transform the adjoint of the left-hand side of rules into the adjoint of the right-hand side of rules.

See also: NCMakeRuleSymmetric, NCReplace, NCReplaceAll, NCReplaceList, NCReplaceRepeated.";

(* NCReplaceSymmetric *)
NCReplaceSymmetric::usage = "\
NCReplaceSymmetric[expr, rules] applies NCMakeRuleSymmetric to rules before calling NCReplace.

See also: NCReplace, NCMakeRuleSymmetric.";

(* NCReplaceListSelfAdjoint *)
NCReplaceListSelfAdjoint::usage = "\
NCReplaceListSelfAdjoint[expr, rules] applies NCMakeRuleSelfAdjoint to rules before calling NCReplaceList.

See also: NCReplaceList, NCMakeRuleSelfAdjoint.";

(* NCMatrixReplaceAll *)
NCMatrixReplaceAll::usage = "\
NCMatrixReplaceAll[expr,rules] applies a rule or list of rules rules in an attempt to transform each part of the nc expression expr.

NCMatrixReplaceAll works as NCReplaceAll but takes extra steps to make sure substitutions work with matrices.

See also: NCReplaceAll, NCMatrixReplaceRepeated.";

(* NCReplaceAllSelfAdjoint *)
NCReplaceAllSelfAdjoint::usage = "\
NCReplaceAllSelfAdjoint[expr, rules] applies NCMakeRuleSelfAdjoint to rules before calling NCReplaceAll.

See also: NCReplaceAll, NCMakeRuleSelfAdjoint.";

(* NCReplaceRepeatedSelfAdjoint *)
NCReplaceRepeatedSelfAdjoint::usage = "\
NCReplaceRepeatedSelfAdjoint[expr, rules] applies NCMakeRuleSelfAdjoint to rules before calling NCReplaceRepeated.

See also: NCReplaceRepeated, NCMakeRuleSelfAdjoint.";

(* NCRLSym *)
NCRLSym::usage = "\
NCRLSym is an alias for NCReplaceListSymmetric.

See also: NCReplaceListSymmetric.";

(* NCRASym *)
NCRASym::usage = "\
NCRASym is an alias for NCReplaceAllSymmetric.

See also: NCReplaceAllSymmetric.";

(* NCReplaceSelfAdjoint *)
NCReplaceSelfAdjoint::usage = "\
NCReplaceSelfAdjoint[expr, rules] applies NCMakeRuleSelfAdjoint to rules before calling NCReplace.

See also: NCReplace, NCMakeRuleSelfAdjoint.";

(* NCReplaceRepeated *)
NCReplaceRepeated::usage = "\
NCReplaceRepeated[expr,rules] repeatedly performs replacements using rule or list of rules rules until expr no longer changes.

See also: NCReplace, NCReplaceAll, NCReplaceList.";
